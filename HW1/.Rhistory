stepFull <- step(FullModel)
FullModel <- lm(TARGET_WINS ~.-INDEX, trainingDataRaw)
summary(FullModel) #Summary of full model
trainingDataRaw <- read.csv(url("https://raw.githubusercontent.com/dsmilo/DATA621/master/HW1/data/moneyball-training-data.csv"))
FullModel <- lm(TARGET_WINS ~.-INDEX, trainingDataRaw)
summary(FullModel) #Summary of full model
stepFull <- step(FullModel)
predictionsStepFull <- predict(stepFull, trainingDataRaw)
View(predictionsStepFull)
predictionsStepFull
rmseStep <- sqrt(mean((trainingDataRaw$TARGET_WINS[!is.na(predictionsStepFull)] - predictionsStepFull[!is.na(predictionsStepFull)])^2))
rmseStep
par(mfrow=c(2,2))
#Displays Residuals vs Fitted, Scale-Location,  and Normal Q-Q.
plot(stepFull)
par(mfrow=c(2,2))
#Displays Residuals vs Fitted, Scale-Location,  and Normal Q-Q.
plot(stepFull)
pairs(TARGET_WINS ~.)
pairs(TARGET_WINS ~., data=trainingDataRaw)
outlierTest(FullModel)
qqPlot(FullModel)
qqplot(FullModel)
leveragePlots(FullModel)
library(car)
outlierTest(FullModel)
qqplot(FullModel)
leveragePlots(FullModel)
FullModel <- lm(TARGET_WINS ~.-INDEX, trainingDataRaw)
summary(FullModel) #Summary of full model
plot(TARGET_WINS~TEAM_BATTING_H, trainingDataRaw)
plot(TARGET_WINS~TEAM_FIELDING_DP, trainingDataRaw)
plot(TARGET_WINS~TEAM_FIELDING_E, trainingDataRaw)
summary(trainingDataRaw)
head(trainingDataRaw)
str(trainingDataRaw)
summary(trainingDataRaw)
head(trainingDataRaw)
TEAM_BATTING_HBP
trainingDataRawTEAM_BATTING_HBP
trainingDataRaw$TEAM_BATTING_HBP
pairs(select(trainingDataRaw, -c(Index)))
library(dplyr)
pairs(select(trainingDataRaw, -c(Index)))
pairs(select(trainingDataRaw, -c(INDEX)))
pairs(select(trainingDataRaw, -c(INDEX)))
cor(select(cigarettes, -c(INDEX)))
cor(select(trainingDataRaw, -c(INDEX)))
View(cor(select(trainingDataRaw, -c(INDEX))))
View(cor(select(trainingDataRaw, -c(INDEX))), na.action = na.omit)
View(cor(select(trainingDataRaw, -c(INDEX)) na.action = na.omit))
View(cor( select(trainingDataRaw, -c(INDEX) ), na.action = na.omit))
str(trainingDataRaw)
summary(trainingDataRaw)
summary(trainingDataRaw)
completedData <- complete(trainingDataRaw)
completedData <- complete(trainingDataRaw,1)
newdata <- na.omit(trainingDataRaw)
newdata
str(newdata)
str(trainingDataRaw)
library(mice)
install.packages("mice")
library(mice)
md.pattern(trainingDataRaw)
library(VIM)
install.packages("VIM")
library(VIM)
aggr_plot <- aggr(trainingDataRaw, col=c('skyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(data), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
aggr_plot <- aggr(trainingDataRaw, col=c('skyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(trainingDataRaw), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
names(trainingDataRaw)
missingBoolean <- md.pattern(trainingDataRaw)
aggr_plot <- aggr(missingBoolean, col=c('skyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(missingBoolean), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
missingBoolean
aggr_plot <- aggr(missingBoolean, col=c('blue','red'), numbers=TRUE, sortVars=TRUE, labels=names(missingBoolean), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
aggr_plot <- aggr(trainingDataRaw, col=c('blue','red'), numbers=TRUE, sortVars=TRUE, labels=names(trainingDataRaw), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
aggr_plot <- aggr(trainingDataRaw, col=c('blue','red'), numbers=TRUE, sortVars=TRUE, labels=names(trainingDataRaw), gap=3, ylab=c("Histogram of missing data","Pattern"))
library(VIM)
aggr_plot <- aggr(trainingDataRaw, col=c('blue','red'), numbers=TRUE, sortVars=TRUE, labels=names(trainingDataRaw), gap=3, ylab=c("Histogram of missing data","Pattern"))
missingBoolean <- md.pattern(trainingDataRaw)
md.pattern(trainingDataRaw)
summary(trainingDataRaw)
aggr_plot <- aggr(trainingDataRaw, col=c('blue','red'), numbers=TRUE, sortVars=TRUE, only.miss = TRUE,  labels=names(trainingDataRaw), gap=3, ylab=c("Histogram of missing data","Pattern"))
aggr(trainingDataRaw, col=c('blue','red'), numbers=TRUE, sortVars=TRUE, only.miss = TRUE,  labels=names(trainingDataRaw), gap=3, ylab=c("Histogram of missing data","Pattern"))
aggr(trainingDataRaw, col=c('blue','red'), numbers=TRUE, sortVars=TRUE,   labels=names(trainingDataRaw), gap=3, ylab=c("Histogram of missing data","Pattern"))
aggr(trainingDataRaw, col=c('blue','red'), numbers=TRUE, sortVars=TRUE, only.miss = TRUE,  labels=names(trainingDataRaw), gap=3, ylab=c("Histogram of missing data","Pattern"))
aggr(trainingDataRaw, col=c('blue','red'), numbers=TRUE, sortVars=TRUE, only.miss = FALSE,  labels=names(trainingDataRaw), gap=3, ylab=c("Histogram of missing data","Pattern"))
marginplot(trainingDataRaw)
complete(trainingDataRaw)
tempData <- mice(trainingDataRaw,m=5,maxit=50,meth='pmm',seed=500)
summary(tempData)
new <- complete(tempData, 1)
summary(new)
summary(trainingDataRaw)
str(trainingDataRaw)
trainingDataRaw <- trainingDataRaw[,c(2:17)]
str(trainingDataRaw)
str(trainingDataRaw)
summary(trainingDataRaw)
library(mice)
tempData <- mice(trainingDataRaw,m=5,maxit=50,meth='pmm',seed=500)
summary(tempData)
new_data <- complete(tempData, 1)
summary(new_data)
pairs(new_data)
FullModel <- lm(TARGET_WINS ~., new_data)
View(cor(new_data))
FullModel <- lm(TARGET_WINS ~., new_data)
trainingDataRaw <- read.csv(url("https://raw.githubusercontent.com/dsmilo/DATA621/master/HW1/data/moneyball-training-data.csv"))
trainingDataRaw <- trainingDataRaw[,c(2:17)] # delete index
str(trainingDataRaw)
summary(trainingDataRaw)
library(mice)
tempData <- mice(trainingDataRaw,m=5,maxit=50,meth='pmm',seed=500)
summary(tempData)
new_data <- complete(tempData, 1)
summary(new_data)
FullModel <- lm(TARGET_WINS ~., new_data)
summary(FullModel) #Summary of full model
pairs(TARGET_WINS ~., new_data)
pairs(TARGET_WINS ~TEAM_BATTING_H+TEAM_BATTING_SO+TEAM_BASERUN_SB+TEAM_BATTING_HBP+TEAM_PITCHING_H+TEAM_FIELDING_E+TEAM_FIELDING_DP, new_data)
fit1 <- lm((TARGET_WINS ~TEAM_BATTING_H+TEAM_BATTING_SO+TEAM_BASERUN_SB+TEAM_BATTING_HBP+TEAM_PITCHING_H+TEAM_FIELDING_E+TEAM_FIELDING_DP, new_data)
fit1 <- lm(TARGET_WINS ~TEAM_BATTING_H+TEAM_BATTING_SO+TEAM_BASERUN_SB+TEAM_BATTING_HBP+TEAM_PITCHING_H+TEAM_FIELDING_E+TEAM_FIELDING_DP, new_data)
summary(fit1)
predicteddata <- predict(fit1, new_data)
View(predicteddata)
cbind(new_data$TARGET_WINS, predicteddata )
plot(pdata)
plot(pdata$TARGET_WINS, predicteddata)
head(pdata)
pdata <- cbind(new_data$TARGET_WINS, predicteddata )
head(pdata)
pdata <- cbind(original=new_data$TARGET_WINS, predicteddata )
head(pdata)
plot(pdata$original, pdata$predicteddata)
head(pdata)
plot(x=pdata$original, y=pdata$predicteddata)
plot(x=original, y=predicteddata)
str(pdata)
head(pdata)
pdata <- data.frame(cbind(original=new_data$TARGET_WINS, predicteddata ))
head(pdata)
plot(x=original, y=predicteddata, data=pdata)
str(pdata)
plot(pdata$original, pdata$predicteddata)
model_fit <- lm(predicteddata~original, pdata)
summary(model_fit)
